###########################################################################################################################################
#  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved                                                                  #
#                                                                                                                                          #
#  Licensed under the MIT No Attribution License (MIT-0) (the ‘License’). You may not use this file except in compliance                   #
#  with the License. A copy of the License is located at                                                                                   #
#                                                                                                                                          #
#      https://opensource.org/licenses/MIT-0                                                                                               #
#                                                                                                                                          #
#  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files        #
#  (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge,     #
#  publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so.  #
#  THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF      #
#  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR #
#  ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH  # 
#  THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                                                                              #
############################################################################################################################################

# author: 
#   - Ciro Santos (cirosant@)
#   - Paulo Aragão (paragao@)
#   - aws-solutions-builder@

AWSTemplateFormatVersion: '2010-09-09'

Description: "(SO0099d) - The AWS Cloudformation template for deploymnet of the Location-based Notifications Using Amazon Pinpoint solution"

Parameters:
  SolutionsBucket:
    Description: original solutions bucket 
    Type: String
  SolutionsPrefix:
    Description: original solutions prefix 
    Type: String
  UserPoolId:
    Description: user pool id
    Type: String
  IdentityPoolId:
    Description: identity pool id
    Type: String
  AppClientId:
    Description: app client id
    Type: String      
  PinpointAppId:
    Description: Pinpoint project id
    Type: String
  AppSyncEndpoint: 
    Description: AppSync Endpoint id 
    Type: String
  S3LogBucket:
    Description: Logging bucket from the main stack
    Type: String
  LambdaEdgeArn:
    Description: LambdaEdgeCustomeResource Arn from the custom-resources-stack
    Type: String

Resources:
  WebSiteCustomResourceLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyName: LambdaBasicExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement: 
              - Effect: Allow
                Action: 
                  - 'logs:CreateLogGroup'
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action: 
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*:*
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: using an inline policy that allows for the lambda to publish the logs

  WebSiteCustomResourceLambdaPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 's3:AbortMultipartUpload'
              - 's3:GetBucketLocation'
              - 's3:GetObject'
              - 's3:HeadObject'
              - 's3:ListBucket'
              - 's3:ListBucketMultipartUploads'
              - 's3:PutObject'
              - 's3:DeleteObject'
            Effect: Allow
            Resource: 
              - !Sub arn:${AWS::Partition}:s3:::${SolutionsBucket}/${SolutionsPrefix}
              - !Sub arn:${AWS::Partition}:s3:::${SolutionsBucket}/${SolutionsPrefix}*
              - !Sub arn:${AWS::Partition}:s3:::${GeofenceAdminWebSiteBucket}
              - !Sub arn:${AWS::Partition}:s3:::${GeofenceAdminWebSiteBucket}/*
        Version: '2012-10-17'
      PolicyName: 'WebSiteCustomResourceLambdaPolicy'
      Roles: 
        - !Ref WebSiteCustomResourceLambdaRole   

  WebSiteCustomResourceLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Ref SolutionsBucket
        S3Key: !Sub ${SolutionsPrefix}website-custom-resource.zip
      Handler: websiteDeploy.handler
      Role: !GetAtt 
        - WebSiteCustomResourceLambdaRole
        - Arn
      Runtime: python3.7
      Environment:
        Variables:
          REGION: !Ref 'AWS::Region'
      Timeout: 600
    DependsOn:
      - WebSiteCustomResourceLambdaPolicy
      - WebSiteCustomResourceLambdaRole    
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: using an inline policy that allows to write to CloudWatch Logs.

  WebSiteCustomResource:
    Type: 'AWS::CloudFormation::CustomResource'
    Properties:
      ServiceToken: !GetAtt 
        - WebSiteCustomResourceLambda
        - Arn
      Requests:
        - websiteBucket: !Ref GeofenceAdminWebSiteBucket
          originBucket: !Ref SolutionsBucket
          originPrefix: !Ref SolutionsPrefix
          userPoolId: !Ref UserPoolId
          appClientId: !Ref AppClientId
          identityPoolId: !Ref IdentityPoolId 
          pinpointAppId: !Ref PinpointAppId 
          appSyncEndpoint: !Ref AppSyncEndpoint
    DependsOn:
      - WebSiteCustomResourceLambda
      - GeofenceAdminWebsiteCFDistribution
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete      

  GeofenceAdminWebSiteBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: LogDeliveryWrite
      LoggingConfiguration:
        DestinationBucketName: !Ref S3LogBucket
        LogFilePrefix: adminwebsite-bucket-access-logs/
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub 
        - geofences-admin-website-${Hash}
        - { Hash: !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref 'AWS::StackId']]]] }
      WebsiteConfiguration:
        ErrorDocument: error.html
        IndexDocument: index.html
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain

  GeofenceAdminWebSiteBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref GeofenceAdminWebSiteBucket
      PolicyDocument:
        Statement:
          - Action: 's3:GetObject'
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt 
                - GeofenceCFOAI
                - S3CanonicalUserId
            Condition:
              Bool: 
                aws:SecureTransport: 
                  - 'True'
            Resource: !Sub ${GeofenceAdminWebSiteBucket.Arn}/*
          - Action:
              - 's3:GetObject*'
              - 's3:GetBucket*'
              - 's3:List*'
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt 
                - GeofenceCFOAI
                - S3CanonicalUserId
            Condition:
              Bool: 
                aws:SecureTransport: 
                  - 'True'
            Resource: 
              - !Sub ${GeofenceAdminWebSiteBucket.Arn}
              - !Sub ${GeofenceAdminWebSiteBucket.Arn}/*
        Version: '2012-10-17'
  
  GeofenceCFOAI:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Allows CloudFront to reach the bucket

  GeofenceAdminWebsiteCFDistribution:
    Type: 'AWS::CloudFront::Distribution'
    DependsOn: 
      - GeofenceAdminWebSiteBucket
    Properties:
      DistributionConfig:
        Logging:
          Bucket: !Sub ${S3LogBucket}.s3.amazonaws.com
          Prefix: cloudfront-logs/      
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: origin1
          ViewerProtocolPolicy: redirect-to-https
          LambdaFunctionAssociations:
            - EventType: 'origin-response'              
              LambdaFunctionARN: !Ref LambdaEdgeArn   
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName: !GetAtt 
              - GeofenceAdminWebSiteBucket
              - RegionalDomainName
            Id: origin1
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${GeofenceCFOAI}
        PriceClass: PriceClass_All
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W70
            reason: Enforcing usage of Http/2.0 and HTTPS which enforces the usage of TLS1.2

Outputs: 
  AdministrationWebsiteURL:
    Description: URL for the administration website
    Value: !GetAtt 
      - GeofenceAdminWebsiteCFDistribution
      - DomainName
  